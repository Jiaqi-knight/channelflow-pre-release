OUTDATED!

This table shows timing results for examples/couette.x (parameters below)
The "time" column shows the total execution time as measured by the Unix
"time" command (e.g. run "time ./couette.x"; the execution time is the
sum of the returned values of user and sys times). Speed is defined by
(fastest time)/time.

32 x 33 x 32, dt = 0.04, T = 100, SBDF3, Rotational

name    arch            -march          Ghz     L2      bmips   time    speed
=============================================================================
komplex amd-duron       athlon          1.0       64    1994    491     0.13
prime   pentium3        pentium3        0.93     256    1863    468     0.14
akbar   pentium4m       pentium4        1.2      512    2395    436     0.15
akbar   pentium4m       pentium4        1.7      512    3394    345     0.19
light   pentium4        pentium4        2.4      512    4793    218     0.39
learn	pentium4	pentium4	2.4	 512	4800	211     0.30
zero    opteron246      athlon64        2.0     1024    4000     94     0.68
harder  opteron248      athlon64        2.2     1024    4394     89     0.72
tansen  athlon64-X2     athlon64        2.4     1024    4800     85     0.75
love    athlon64-X2     athlon64        2.4     1024    4800     83     0.77
pace16  xeonE5345	nocona		2.3	4096	4667	 64	1.00



name    arch            Ghz     cache   bmips   time    speed	gcc chf date
================================================================================================
pacemkr opteron250	2.4	1024	4786	129	        3.4 1.4 2009-06-05
pace17  xeonE5345	2.4	1024	4786	135		3.4 1.4 2009-08-14
akbar	core2t5600	1.8	2048	3658	 71		4.3 1.4 2009-06-04
tansen	phenomII-955    3.2	6072	6429	 41		4.3 1.4 2009-06-07
birbal  core-i5-2520M   2.5     3072    4984     41             4.5 1.4 2011-06-16




48 x 49 x 48, dt = 0.03125, T = 100, SBDF3, Rotational

tansen	phenomII-955    amdfam10	3.2	 512	6429	 239


  const int Nx=32;
  const int Ny=33;
  const int Nz=32;

  // Define box size
  const Real Lx=1.75*pi;
  const Real a= -1.0;
  const Real b=  1.0;
  const Real Lz=1.2*pi;

  // Define flow parameters
  const Real Reynolds = 400.0;
  const Real nu = 1.0/Reynolds;
  const Real dPdx  = 0.0;

  // Define integration parameters
  const int n = 25;      // take twenty-five steps between printouts
  const Real dt = 1.0/n; // integration timestep
  const Real T  = 100.0; // integrate from t=0 to t=T

  // Define DNS parameters
  DNSFlags flags;
  flags.baseflow     = PlaneCouette;
  flags.timestepping = SBDF3;
  flags.initstepping = SMRK2;
  flags.nonlinearity = Rotational;
  flags.dealiasing   = DealiasXZ;
  flags.taucorrection = true;
  flags.constraint  = PressureGradient; // enforce constant
